syntax = "proto3";

package raftpb;

option go_package = ".;raftPB";

enum MessageType {
    MsgHup = 0;
    MsgBeat = 1;
    MsgProp = 2;
    MsgApp = 3;
    MsgAppResp = 4;
    MsgVote = 5;
    MsgVoteResp = 6;
    MsgSnap = 7;
    MsgHeartbeat = 8;
    MsgHeartbeatResp = 9;
    MsgUnreachable = 10;
    MsgSnapStatus = 11;
    MsgCheckQuorum = 12;
    MsgTransferLeader = 13;
    MsgTimeoutNow = 14;
    MsgReadIndex = 15;
    MsgReadIndexResp = 16;
    MsgPreVote = 17;
    MsgPreVoteResp = 18;
}
enum EntryType {
    EntryNormal = 0;
    EntryConfChange = 1;
}

message Entry {
    uint64 term = 1;
    uint64 index = 2;
    EntryType type = 3;
    bytes data = 4;
}
message SnapshotMetadata {
}
message Snapshot {
    bytes data = 1;
    SnapshotMetadata metadata = 2;
}
message RaftMessage {
    MessageType type = 1;
    uint64 to = 2;
    uint64 from = 3;
    uint64 term = 4;
    uint64 logTerm = 5;
    uint64 index = 6;
    repeated Entry entries = 7;
    uint64 commit = 8;
    Snapshot snapshot = 9;
    bool reject = 10;
    uint64 rejectHint = 11;
    bytes context = 12;
}
message ConfState{
    repeated uint64 voters = 1;
    repeated uint64 learners = 2;
    repeated uint64 voters_outgoing = 3;
    repeated uint64 learners_next = 4;
    bool auto_leave = 5;
}

enum ConfChangeType{
    ConfChangeAddNode = 0;
    ConfChangeRemoveNode = 1;
    ConfChangeUpdateNode = 2;
    ConfChangeAddLearnerNode = 3;
}
 message ConfChange{
     ConfChangeType type = 1;
 }

message HardState{
    uint64 term = 1;
    uint64 vote = 2;
    uint64 commit = 3;
}