// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: election.proto

package election_grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Term   uint32 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
}

func (x *OathRequest) Reset() {
	*x = OathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_election_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OathRequest) ProtoMessage() {}

func (x *OathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_election_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OathRequest.ProtoReflect.Descriptor instead.
func (*OathRequest) Descriptor() ([]byte, []int) {
	return file_election_proto_rawDescGZIP(), []int{0}
}

func (x *OathRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *OathRequest) GetTerm() uint32 {
	if x != nil {
		return x.Term
	}
	return 0
}

type OathReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Accept bool   `protobuf:"varint,2,opt,name=accept,proto3" json:"accept,omitempty"`
}

func (x *OathReply) Reset() {
	*x = OathReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_election_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OathReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OathReply) ProtoMessage() {}

func (x *OathReply) ProtoReflect() protoreflect.Message {
	mi := &file_election_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OathReply.ProtoReflect.Descriptor instead.
func (*OathReply) Descriptor() ([]byte, []int) {
	return file_election_proto_rawDescGZIP(), []int{1}
}

func (x *OathReply) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *OathReply) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type HeartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartRequest) Reset() {
	*x = HeartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_election_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartRequest) ProtoMessage() {}

func (x *HeartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_election_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartRequest.ProtoReflect.Descriptor instead.
func (*HeartRequest) Descriptor() ([]byte, []int) {
	return file_election_proto_rawDescGZIP(), []int{2}
}

type HeartReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartReply) Reset() {
	*x = HeartReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_election_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartReply) ProtoMessage() {}

func (x *HeartReply) ProtoReflect() protoreflect.Message {
	mi := &file_election_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartReply.ProtoReflect.Descriptor instead.
func (*HeartReply) Descriptor() ([]byte, []int) {
	return file_election_proto_rawDescGZIP(), []int{3}
}

var File_election_proto protoreflect.FileDescriptor

var file_election_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3a, 0x0a, 0x0b, 0x4f, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x65, 0x72, 0x6d, 0x22, 0x3c, 0x0a, 0x09, 0x4f, 0x61, 0x74, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x32, 0x7c, 0x0a, 0x0f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x4f, 0x61, 0x74, 0x68, 0x12, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x05, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x11, 0x5a, 0x0f, 0x2e, 0x3b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_election_proto_rawDescOnce sync.Once
	file_election_proto_rawDescData = file_election_proto_rawDesc
)

func file_election_proto_rawDescGZIP() []byte {
	file_election_proto_rawDescOnce.Do(func() {
		file_election_proto_rawDescData = protoimpl.X.CompressGZIP(file_election_proto_rawDescData)
	})
	return file_election_proto_rawDescData
}

var file_election_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_election_proto_goTypes = []interface{}{
	(*OathRequest)(nil),  // 0: service.OathRequest
	(*OathReply)(nil),    // 1: service.OathReply
	(*HeartRequest)(nil), // 2: service.HeartRequest
	(*HeartReply)(nil),   // 3: service.HeartReply
}
var file_election_proto_depIdxs = []int32{
	0, // 0: service.electionService.Oath:input_type -> service.OathRequest
	2, // 1: service.electionService.Heart:input_type -> service.HeartRequest
	1, // 2: service.electionService.Oath:output_type -> service.OathReply
	3, // 3: service.electionService.Heart:output_type -> service.HeartReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_election_proto_init() }
func file_election_proto_init() {
	if File_election_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_election_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_election_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OathReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_election_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_election_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_election_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_election_proto_goTypes,
		DependencyIndexes: file_election_proto_depIdxs,
		MessageInfos:      file_election_proto_msgTypes,
	}.Build()
	File_election_proto = out.File
	file_election_proto_rawDesc = nil
	file_election_proto_goTypes = nil
	file_election_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ElectionServiceClient is the client API for ElectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ElectionServiceClient interface {
	Oath(ctx context.Context, in *OathRequest, opts ...grpc.CallOption) (*OathReply, error)
	Heart(ctx context.Context, in *HeartRequest, opts ...grpc.CallOption) (*HeartReply, error)
}

type electionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewElectionServiceClient(cc grpc.ClientConnInterface) ElectionServiceClient {
	return &electionServiceClient{cc}
}

func (c *electionServiceClient) Oath(ctx context.Context, in *OathRequest, opts ...grpc.CallOption) (*OathReply, error) {
	out := new(OathReply)
	err := c.cc.Invoke(ctx, "/service.electionService/Oath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *electionServiceClient) Heart(ctx context.Context, in *HeartRequest, opts ...grpc.CallOption) (*HeartReply, error) {
	out := new(HeartReply)
	err := c.cc.Invoke(ctx, "/service.electionService/Heart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ElectionServiceServer is the server API for ElectionService service.
type ElectionServiceServer interface {
	Oath(context.Context, *OathRequest) (*OathReply, error)
	Heart(context.Context, *HeartRequest) (*HeartReply, error)
}

// UnimplementedElectionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedElectionServiceServer struct {
}

func (*UnimplementedElectionServiceServer) Oath(context.Context, *OathRequest) (*OathReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Oath not implemented")
}
func (*UnimplementedElectionServiceServer) Heart(context.Context, *HeartRequest) (*HeartReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heart not implemented")
}

func RegisterElectionServiceServer(s *grpc.Server, srv ElectionServiceServer) {
	s.RegisterService(&_ElectionService_serviceDesc, srv)
}

func _ElectionService_Oath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElectionServiceServer).Oath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.electionService/Oath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElectionServiceServer).Oath(ctx, req.(*OathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ElectionService_Heart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElectionServiceServer).Heart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.electionService/Heart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElectionServiceServer).Heart(ctx, req.(*HeartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ElectionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.electionService",
	HandlerType: (*ElectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Oath",
			Handler:    _ElectionService_Oath_Handler,
		},
		{
			MethodName: "Heart",
			Handler:    _ElectionService_Heart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "election.proto",
}
